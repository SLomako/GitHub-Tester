plugins {
    id 'java'
    id 'io.qameta.allure' version '2.11.2'
    id 'io.freefair.lombok' version '8.0.1'
}

repositories {
    mavenCentral()
}

allure {
    report {
        version.set('2.23.0')
    }
    adapter {
        aspectjWeaver.set(true)
        frameworks {
            junit5 {
                adapterVersion.set('2.23.0')
            }
        }
    }
}

compileTestJava {
    options.encoding = 'UTF-8'
}

dependencies {
    testImplementation(
            'org.aeonbits.owner:owner:1.0.12',
            'com.codeborne:selenide:6.15.0',
            'io.rest-assured:rest-assured:5.3.1',
            'org.junit.jupiter:junit-jupiter:5.9.3',
            'com.fasterxml.jackson.core:jackson-databind:2.15.2',
            'com.fasterxml.jackson.core:jackson-core:2.15.2',
            'io.qameta.allure:allure-rest-assured:2.21.0',
            'io.qameta.allure:allure-selenide:2.21.0',
            'com.github.javafaker:javafaker:1.0.2',
            'org.assertj:assertj-core:3.24.2',
            'net.lingala.zip4j:zip4j:2.11.5',
            'org.slf4j:slf4j-simple:2.0.7',
            'ru.yandex.qatools.ashot:ashot:1.5.4'
    )
}

test {
    systemProperties(System.getProperties())
    useJUnitPlatform()

    def threads = System.getProperty('threads', '2')
    def maxPoolSize = System.getProperty('maxPoolSize', '2')

    systemProperties.'junit.jupiter.execution.parallel.enabled' = 'true'
    systemProperties.'junit.jupiter.execution.parallel.mode.default' = 'concurrent'
    systemProperties.'junit.jupiter.execution.parallel.mode.classes.default' = 'concurrent'
    systemProperties.'junit.jupiter.execution.parallel.config.strategy' = 'fixed'
    systemProperties.'junit.jupiter.execution.parallel.config.fixed.max-pool-size' = maxPoolSize
    systemProperties.'junit.jupiter.execution.parallel.config.fixed.parallelism' = threads.toInteger()

    testLogging {
        lifecycle {
            events 'started', 'skipped', 'failed', 'standard_error', 'standard_out'
            exceptionFormat 'short'
        }
    }
}
